// features:
score keeping
difficulty selectable (easy, med, hard -> more cards, less time to preview?)


// this is an in-progress implementation of randomEmojiFromRange() 
// the idea is to generate/return an emoji programmatically rather than from a PRE-populated list of emojis
randomEmojiFromRange() {
    // hard coded for now, maybe these belong in the global scope or are set dynamically based on difficulty selection?
    // U+1F600 - U+1FAAA    // unicode range for emojis
    const min = 0x1F600;
    const max = 0x1FAAA;

    const minDecimal = parseInt(min, 16);
    const maxDecimal = parseInt(max, 16);

    const randDecimal = Math.floor(Math.random() * (maxDecimal - minDecimal + 1)) + minDecimal;

    const randHex = randDecimal.toString(16).toUpperCase();

    return String.fromCodePoint(randHex);
    
}


the emojis on the gameboard don't know 
that they were both spawned
from the same function block
long lost twins ðŸ¤ ðŸ¤ 


// 
cardClicked(card) {
        if (!this.firstGuessMade) {
            // first guess
            this.firstGuess = card;
            card.show();
            this.firstGuessMade = true;
        } else {
            // second guess
            this.secondGuess = card;
            card.show();

            // compare guesses
            if (this.firstGuess.emoji === this.secondGuess.emoji) {
                this.firstGuess.matched = true;
                this.secondGuess.matched = true;
                console.log("successful match!");
            } else {
                setTimeout(() => {
                    this.firstGuess.hide();
                    this.secondGuess.hide();
                }, 1000); // hide cards after 1 second if not matched
            }

            // reset for next turn
            this.firstGuess = null;
            this.secondGuess = null;
            this.firstGuessMade = false;
        }
    }